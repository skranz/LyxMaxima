sample.interval=20000
"sort.list" "factor" "table" "summaryRprof" "button.solve.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"readClipboard" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"gsub" ".svalue" "standardGeneric" ".svalue" "svalue" "standardGeneric" "svalue" "gui.to.lyma" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"exists" "get.restore.point.options" "is.storing" "store.objects" "restore.point" "str.replace" "convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"eval" "eval" "match.arg" "sort.list" "factor" "as.data.frame.character" "as.data.frame" "data.frame" "show.pos" "FUN" "lapply" "str.replace.by.blocks" "convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"dim" "nrow" ".set_row_names" "setattr" "as.data.frame.data.table" "as.data.frame" "data.frame" "str.replace.by.blocks" "convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"store.objects" "restore.point" "str.at.pos" "str.replace" "convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"attr" "str.replace" "convert.math" "ly.mao.diff" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"get.mx" "file" "read.text" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"Sys.sleep" "read.maxima.out" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"rbind" "blocks.add.level.0" "str.replace.by.blocks" "maxima.tex.to.lyx" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"$" "match" "%in%" "library" "str.replace.by.blocks" "maxima.tex.to.lyx" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"-" "<Anonymous>" "mapply" "str_split" "sep.lines" "maxima.tex.to.lyx" "convert.maxima.output" "eval.mao.to.ly" "lyx.diff" "button.diff.fun" "<Anonymous>" "FUN" "lapply" "runHandlers" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" 
"ifelse" "structure" ".encode_numeric_version" "Ops.numeric_version" "testRversion" "library" 
"list.files" "find.package" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"unique" ".make_numeric_version" "numeric_version" "as.numeric_version" "Ops.numeric_version" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"importIntoEnv" "namespaceImportFrom" "namespaceImport" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"ls" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"lazyLoadDBfetch" "get" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"match.fun" "lapply" ".checkGroupSigLength" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"exists" ".findAll" ".findBasicFuns" "genericForPrimitive" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"<Anonymous>" "<Anonymous>" "<Anonymous>" "lazyLoadDBfetch" "get" "objects" ".mergeMethodsTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"paste" "methodsPackageMetaName" ".TableMetaName" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
".getClassFromCache" "getClassDef" "is" "getGroupMembers" ".checkGroupSigLength" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"exists" ".findAll" ".findBasicFuns" "genericForPrimitive" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"exists" ".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "getGeneric" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"exists" ".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "getGeneric" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"exists" ".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "getGeneric" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"exists" ".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "getGeneric" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"exists" ".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "getGeneric" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"is" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "objects" ".resetInheritedMethods" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
".getClassFromCache" "getClassDef" "is" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"el" "elNamed" "genericForPrimitive" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
".identC" "is" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
".getClassFromCache" "getClassDef" "is" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"exists" "topenv" ".findAll" ".findBasicFuns" "genericForPrimitive" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"el" "possibleExtends" "is" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
".getClassFromCache" "getClassDef" "is" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"unique" "simplify2array" "sapply" "getGroupMembers" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"exists" ".cacheGenericTable" ".cacheGeneric" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
".identC" "is" "cacheGenericsMetaData" "Recall" "cacheGenericsMetaData" "Recall" "cacheGenericsMetaData" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"objects" "<Anonymous>" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"substr" "<Anonymous>" "unique" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"file.info" "find.package" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"list.files" "find.package" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"isNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"grepl" "find.package" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"isNamespace" "asNamespace" "get" ":::" "registerS3methods" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"structure" "addImports" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"gzfile" "readRDS" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"inDL" "dyn.load" "library.dynam" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"strsplit" "lapply" ".make_numeric_version" "R_system_version" "package_version" "getRversion" "message" "find_rtools" "fun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "runHook" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" ".getRequiredPackages2" "library" 
"objects" "match" "checkConflicts" "library" ".getRequiredPackages2" "library" 
"objects" "match" "checkConflicts" "library" ".getRequiredPackages2" "library" 
"objects" "match" "checkConflicts" "library" ".getRequiredPackages2" "library" 
"bindTranslations" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" 
"objects" "match" "checkConflicts" "library" 
"objects" "match" "checkConflicts" "library" 
"objects" "match" "checkConflicts" "library" 
"objects" "match" "checkConflicts" "library" 
"file.exists" "testRversion" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "require" "document" "document.with.examples" 
"unique" "find.package" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "require" "document" "document.with.examples" 
"fun" "lazyLoadDBexec" "lazyLoad" "eval" "eval" "eval" "eval" "eval.parent" "local" "eval" "eval" "sys.source" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "require" "document" "document.with.examples" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "require" "document" "document.with.examples" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "require" "document" "document.with.examples" 
"objects" "match" "checkConflicts" "attach" "attachNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "require" "document" "document.with.examples" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "require" "document" "document.with.examples" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "require" "document" "document.with.examples" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "require" "document" "document.with.examples" 
"objects" "match" "checkConflicts" "library" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "require" "document" "document.with.examples" 
"set" "<Anonymous>" "lazyLoadDBfetch" "<Anonymous>" "document" "document.with.examples" 
"file.remove" "document" "document.with.examples" 
"get" "getNamespaceInfo" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"asNamespace" "getNamespaceImports" "getNamespaceUsers" "unloadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "unload" "load_all" "document" "document.with.examples" 
"[" "srcfilecopy" "parse" "parseNamespaceFile" "parse_ns_file" "setup_ns_imports" "create_ns_env" "load_all" "document" "document.with.examples" 
"file" "readLines" "source_one" "source_many" "force" "in_dir" "load_code" "load_all" "document" "document.with.examples" 
"file.exists" "stopifnot" "source_one" "source_many" "force" "in_dir" "load_code" "load_all" "document" "document.with.examples" 
"parse" "source_one" "source_many" "force" "in_dir" "load_code" "load_all" "document" "document.with.examples" 
"NROW" "registerS3methods" "register_s3" "load_all" "document" "document.with.examples" 
"as.package" "pkg_env_name" "attach" "attach_ns" "load_all" "document" "document.with.examples" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "load_all" "document" "document.with.examples" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "load_all" "document" "document.with.examples" 
"objects" "match" "checkConflicts" "attach" "attach_ns" "load_all" "document" "document.with.examples" 
"ls" "loadedNamespaces" "match" "%in%" "is_loaded" "ns_env" "export_ns" "load_all" "document" "document.with.examples" 
"parse" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"strsplit" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"stopifnot" "str_trim" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"mapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"Filter" "compact" "do.call" "re_call" "str_detect" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_detect" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"str_replace" "check_string" "str_trim" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"structure" ".POSIXct" "file.info" "srcfile" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"[" "srcfilecopy" "parse" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"$" "getSrcLines" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"!" "check_string" "str_trim" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"gsub" "do.call" "re_call" "str_replace_all" "str_trim" "check_string" "str_length" "is.null.string" "parse.introduction" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"readLines" "prerefs" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"grepl" "do.call" "re_call" "str_detect" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"parse" "FUN" "lapply" "force" "<Anonymous>" "FUN" "lapply" "unlist" "document" "document.with.examples" 
"re_call" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"is.fixed" "re_call" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"str_replace_all" "str_trim" "process_description" "add_tag" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"recyclable" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"re_call" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"stopifnot" "FUN" "lapply" "add_tag" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"recyclable" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"get" "formals" "match" "%in%" "re_call" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"%in%" "structure" "fixed" "check_pattern" "str_replace_all" "FUN" "vapply" "usage" "process.usage" "add_tag" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"FUN" "lapply" "add_tag" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match" "structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"[[<-" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"Filter" "compact" "do.call" "re_call" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match.fun" "Negate" "match.fun" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"vapply" "recyclable" "check_pattern" "str_detect" "process.usage" "add_tag" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"FUN" "lapply" "unlist" "Filter" "compact" "do.call" "re_call" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match" "structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"new_tag" "add_tag" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"vapply" "recyclable" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"attr" "case.ignored" "re_call" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"add_tag" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "new_tag" "process_description" "add_tag" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "new_tag" "add_tag" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"do.call" "re_call" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "nice_name" "%||%" "lapply" "unlist" "Filter" "str_c" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"add_tag" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"sys.call" "match.call" "stopifnot" "add_tag" "roclet_rd_one" "force" "<Anonymous>" "roc_process.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"lazyLoadDBfetch" "format.usage_tag" "FUN" "lapply" "format.rd_file" "format" "force" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "fixed" "check_pattern" "str_replace_all" "rd_tag" "format.title_tag" "FUN" "lapply" "format.rd_file" "format" "force" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"lapply" "unlist" "Filter" "str_c" "lapply" "unlist" "Filter" "str_c" "rd_tag" "format_collapse" "format.usage_tag" "FUN" "lapply" "format.rd_file" "format" "force" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"paste" "paste0" "strwrap" "str_wrap" "lapply" "unlist" "Filter" "str_c" "lapply" "unlist" "Filter" "str_c" "rd_tag" "format_collapse" "format.usage_tag" "FUN" "lapply" "format.rd_file" "format" "force" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"serialize" "digest" "withCallingHandlers" "suppressWarnings" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"serialize" "digest" "withCallingHandlers" "suppressWarnings" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"eval" "match.arg" "digest" "withCallingHandlers" "suppressWarnings" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match.call" "stopifnot" "str_trim" "FUN" "vapply" "format_rd" "format.alias_tag" "FUN" "lapply" "format.rd_file" "format" "force" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"lapply" "unlist" "Filter" "str_c" "rd_tag" "format.description_tag" "FUN" "lapply" "format.rd_file" "format" "force" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
".Call" "digest" "withCallingHandlers" "suppressWarnings" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"strsplit" "lapply" "strwrap" "str_wrap" "lapply" "unlist" "Filter" "str_c" "lapply" "unlist" "Filter" "str_c" "rd_tag" "format_collapse" "format.usage_tag" "FUN" "lapply" "format.rd_file" "format" "force" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
".Call" "digest" "withCallingHandlers" "suppressWarnings" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"strsplit" "lapply" "strwrap" "str_wrap" "lapply" "unlist" "Filter" "str_c" "lapply" "unlist" "Filter" "str_c" "rd_tag" "format_collapse" "format.usage_tag" "FUN" "lapply" "format.rd_file" "format" "force" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"serialize" "digest" "withCallingHandlers" "suppressWarnings" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
".Call" "digest" "withCallingHandlers" "suppressWarnings" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"paste0" "strwrap" "str_wrap" "lapply" "unlist" "Filter" "str_c" "lapply" "unlist" "Filter" "str_c" "rd_tag" "format.description_tag" "FUN" "lapply" "format.rd_file" "format" "force" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"$<-" "format.name_tag" "FUN" "lapply" "format.rd_file" "format" "force" "<Anonymous>" "FUN" "vapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"lazyLoadDBfetch" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"unique" "intersect" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"lapply" "sapply" "RdTags" "prepare2_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"do.call" "re_call" "str_detect" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"grepl" "checkEmpty" "prepare3_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"which" "prepare2_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"writeLines" "parse_Rd" "eval" "eval" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"file" "writeLines" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"file.exists" "the_same" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"grep" "prepare2_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"grepl" "checkEmpty" "prepare3_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match" "%in%" "checkSection" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match" "%in%" "checkSection" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match" "%in%" "checkSection" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match" "%in%" "checkSection" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match" "%in%" "checkSection" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match" "%in%" "checkSection" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match" "%in%" "checkSection" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match" "%in%" "checkSection" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"match" "%in%" "checkSection" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"file" "readLines" "parse_Rd" "eval" "eval" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"grepl" "checkEmpty" "prepare3_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"grepl" "checkEmpty" "prepare3_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"grepl" "checkEmpty" "prepare3_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"order" "prepare2_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"order" "prepare2_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"order" "prepare2_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"order" "prepare2_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"order" "prepare2_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"order" "prepare2_Rd" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"file" "parse_Rd" "eval" "eval" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "force" "with_collate" "force" "with_envvar" "document" "document.with.examples" 
"structure" "prepare_Rd" "withCallingHandlers" "checkRd" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "mapply" "roc_output.had" "<Anonymous>" "f